Design and Analysis of Algorithms

1. Write a program non-recursive and recursive program to calculate Fibonacci numbers and 
analyze their time and space complexity.
2. Write a program to implement Huffman Encoding using a greedy strategy.
3. Write a program to solve a fractional Knapsack problem using a greedy method.
4. Write a program to solve a 0-1 Knapsack problem using dynamic programming or branch and 
bound strategy.
5. Design n-Queens matrix having first Queen placed. Use backtracking to place remaining 
Queens to generate the final n-queenâ€˜s matrix.
6. Write a program for analysis of quick sort by using deterministic and randomized variant.



 Mini Projects


7.Mini Project - 
Write a program to implement matrix multiplication. Also implement 
multithreaded matrix multiplication with either one thread per row or one thread per cell. 
Analyze and compare their performance.

8. Mini Project - 
Implement merge sort and multithreaded merge sort. Compare time required 
by both the algorithms. Also analyze the performance of each algorithm for the best case and 
the worst case.

9. Mini Project - 
Implement the Naive string matching algorithm and Rabin-Karp algorithm for 
string matching. Observe difference in working of both the algorithms for the same input.

10. Mini Project -
Different exact and approximation algorithms for Travelling-Sales-Person 
Problem